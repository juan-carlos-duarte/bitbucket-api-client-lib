/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * PipelineSshPublicKey
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-12T14:05:09.453-06:00[America/Mexico_City]")
public class PipelineSshPublicKey extends Object {
  @JsonProperty("key_type")
  private String keyType = null;

  @JsonProperty("key")
  private String key = null;

  @JsonProperty("md5_fingerprint")
  private String md5Fingerprint = null;

  @JsonProperty("sha256_fingerprint")
  private String sha256Fingerprint = null;

  public PipelineSshPublicKey keyType(String keyType) {
    this.keyType = keyType;
    return this;
  }

   /**
   * The type of the public key.
   * @return keyType
  **/
  @Schema(description = "The type of the public key.")
  public String getKeyType() {
    return keyType;
  }

  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }

  public PipelineSshPublicKey key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The base64 encoded public key.
   * @return key
  **/
  @Schema(description = "The base64 encoded public key.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public PipelineSshPublicKey md5Fingerprint(String md5Fingerprint) {
    this.md5Fingerprint = md5Fingerprint;
    return this;
  }

   /**
   * The MD5 fingerprint of the public key.
   * @return md5Fingerprint
  **/
  @Schema(description = "The MD5 fingerprint of the public key.")
  public String getMd5Fingerprint() {
    return md5Fingerprint;
  }

  public void setMd5Fingerprint(String md5Fingerprint) {
    this.md5Fingerprint = md5Fingerprint;
  }

  public PipelineSshPublicKey sha256Fingerprint(String sha256Fingerprint) {
    this.sha256Fingerprint = sha256Fingerprint;
    return this;
  }

   /**
   * The SHA-256 fingerprint of the public key.
   * @return sha256Fingerprint
  **/
  @Schema(description = "The SHA-256 fingerprint of the public key.")
  public String getSha256Fingerprint() {
    return sha256Fingerprint;
  }

  public void setSha256Fingerprint(String sha256Fingerprint) {
    this.sha256Fingerprint = sha256Fingerprint;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineSshPublicKey pipelineSshPublicKey = (PipelineSshPublicKey) o;
    return Objects.equals(this.keyType, pipelineSshPublicKey.keyType) &&
        Objects.equals(this.key, pipelineSshPublicKey.key) &&
        Objects.equals(this.md5Fingerprint, pipelineSshPublicKey.md5Fingerprint) &&
        Objects.equals(this.sha256Fingerprint, pipelineSshPublicKey.sha256Fingerprint) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyType, key, md5Fingerprint, sha256Fingerprint, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineSshPublicKey {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    md5Fingerprint: ").append(toIndentedString(md5Fingerprint)).append("\n");
    sb.append("    sha256Fingerprint: ").append(toIndentedString(sha256Fingerprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
