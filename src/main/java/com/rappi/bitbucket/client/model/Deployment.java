/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rappi.bitbucket.client.model.DeploymentEnvironment;
import com.rappi.bitbucket.client.model.DeploymentRelease;
import com.rappi.bitbucket.client.model.DeploymentState;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Deployment
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-12T14:05:09.453-06:00[America/Mexico_City]")
public class Deployment extends Object {
  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("state")
  private DeploymentState state = null;

  @JsonProperty("environment")
  private DeploymentEnvironment environment = null;

  @JsonProperty("release")
  private DeploymentRelease release = null;

  public Deployment uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * The UUID identifying the deployment.
   * @return uuid
  **/
  @Schema(description = "The UUID identifying the deployment.")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public Deployment state(DeploymentState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public DeploymentState getState() {
    return state;
  }

  public void setState(DeploymentState state) {
    this.state = state;
  }

  public Deployment environment(DeploymentEnvironment environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Get environment
   * @return environment
  **/
  @Schema(description = "")
  public DeploymentEnvironment getEnvironment() {
    return environment;
  }

  public void setEnvironment(DeploymentEnvironment environment) {
    this.environment = environment;
  }

  public Deployment release(DeploymentRelease release) {
    this.release = release;
    return this;
  }

   /**
   * Get release
   * @return release
  **/
  @Schema(description = "")
  public DeploymentRelease getRelease() {
    return release;
  }

  public void setRelease(DeploymentRelease release) {
    this.release = release;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deployment deployment = (Deployment) o;
    return Objects.equals(this.uuid, deployment.uuid) &&
        Objects.equals(this.state, deployment.state) &&
        Objects.equals(this.environment, deployment.environment) &&
        Objects.equals(this.release, deployment.release) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, state, environment, release, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deployment {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("    release: ").append(toIndentedString(release)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
