/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.api;

import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PropertiesApi
 */
@Ignore
public class PropertiesApiTest {

    private final PropertiesApi api = new PropertiesApi();

    /**
     * 
     *
     * Delete an application property value stored against a commit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCommitHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String commit = null;
        String appKey = null;
        String propertyName = null;
        api.deleteCommitHostedPropertyValue(workspace, repoSlug, commit, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete an application property value stored against a pull request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePullRequestHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String pullrequestId = null;
        String appKey = null;
        String propertyName = null;
        api.deletePullRequestHostedPropertyValue(workspace, repoSlug, pullrequestId, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete an application property value stored against a repository.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRepositoryHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String appKey = null;
        String propertyName = null;
        api.deleteRepositoryHostedPropertyValue(workspace, repoSlug, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete an application property value stored against a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserHostedPropertyValueTest() {
        String selectedUser = null;
        String appKey = null;
        String propertyName = null;
        api.deleteUserHostedPropertyValue(selectedUser, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve an application property value stored against a commit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCommitHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String commit = null;
        String appKey = null;
        String propertyName = null;
        api.getCommitHostedPropertyValue(workspace, repoSlug, commit, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve an application property value stored against a pull request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPullRequestHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String pullrequestId = null;
        String appKey = null;
        String propertyName = null;
        api.getPullRequestHostedPropertyValue(workspace, repoSlug, pullrequestId, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve an application property value stored against a repository.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRepositoryHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String appKey = null;
        String propertyName = null;
        api.getRepositoryHostedPropertyValue(workspace, repoSlug, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve an application property value stored against a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveUserHostedPropertyValueTest() {
        String selectedUser = null;
        String appKey = null;
        String propertyName = null;
        api.retrieveUserHostedPropertyValue(selectedUser, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an application property value stored against a commit.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCommitHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String commit = null;
        String appKey = null;
        String propertyName = null;
        api.updateCommitHostedPropertyValue(workspace, repoSlug, commit, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an application property value stored against a pull request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePullRequestHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String pullrequestId = null;
        String appKey = null;
        String propertyName = null;
        api.updatePullRequestHostedPropertyValue(workspace, repoSlug, pullrequestId, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an application property value stored against a repository.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateRepositoryHostedPropertyValueTest() {
        String workspace = null;
        String repoSlug = null;
        String appKey = null;
        String propertyName = null;
        api.updateRepositoryHostedPropertyValue(workspace, repoSlug, appKey, propertyName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an application property value stored against a user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserHostedPropertyValueTest() {
        String selectedUser = null;
        String appKey = null;
        String propertyName = null;
        api.updateUserHostedPropertyValue(selectedUser, appKey, propertyName);

        // TODO: test validations
    }
}
