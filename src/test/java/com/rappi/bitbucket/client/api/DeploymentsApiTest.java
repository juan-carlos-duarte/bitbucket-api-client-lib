/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.api;

import com.rappi.bitbucket.client.model.Deployment;
import com.rappi.bitbucket.client.model.DeploymentEnvironment;
import com.rappi.bitbucket.client.model.Error;
import com.rappi.bitbucket.client.model.PaginatedDeployments;
import com.rappi.bitbucket.client.model.PaginatedEnvironments;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeploymentsApi
 */
@Ignore
public class DeploymentsApiTest {

    private final DeploymentsApi api = new DeploymentsApi();

    /**
     * 
     *
     * Create an environment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEnvironmentTest() {
        DeploymentEnvironment body = null;
        String username = null;
        String repoSlug = null;
        DeploymentEnvironment response = api.createEnvironment(body, username, repoSlug);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete an environment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEnvironmentForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        String environmentUuid = null;
        api.deleteEnvironmentForRepository(username, repoSlug, environmentUuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve a deployment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeploymentForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        String deploymentUuid = null;
        Deployment response = api.getDeploymentForRepository(username, repoSlug, deploymentUuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Find deployments
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDeploymentsForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        PaginatedDeployments response = api.getDeploymentsForRepository(username, repoSlug);

        // TODO: test validations
    }
    /**
     * 
     *
     * Retrieve an environment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnvironmentForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        String environmentUuid = null;
        DeploymentEnvironment response = api.getEnvironmentForRepository(username, repoSlug, environmentUuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Find environments
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEnvironmentsForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        PaginatedEnvironments response = api.getEnvironmentsForRepository(username, repoSlug);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an environment
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateEnvironmentForRepositoryTest() {
        String username = null;
        String repoSlug = null;
        String environmentUuid = null;
        api.updateEnvironmentForRepository(username, repoSlug, environmentUuid);

        // TODO: test validations
    }
}
