/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.api;

import com.rappi.bitbucket.client.model.Error;
import com.rappi.bitbucket.client.model.PaginatedTeams;
import com.rappi.bitbucket.client.model.PaginatedUsers;
import com.rappi.bitbucket.client.model.PaginatedWebhookSubscriptions;
import com.rappi.bitbucket.client.model.Team;
import com.rappi.bitbucket.client.model.User;
import com.rappi.bitbucket.client.model.WebhookSubscription;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeamsApi
 */
@Ignore
public class TeamsApiTest {

    private final TeamsApi api = new TeamsApi();

    /**
     * 
     *
     * Returns all the teams that the authenticated user is associated with.  This endpoint has been deprecated, and you should use the new workspaces endpoint. For more information, see [this post](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-teams-deprecation/).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsGetTest() {
        String role = null;
        PaginatedTeams response = api.teamsGet(role);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the list of accounts that are following this team.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameFollowersGetTest() {
        String username = null;
        PaginatedUsers response = api.teamsUsernameFollowersGet(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the list of accounts this team is following.  This endpoint has been deprecated, and you should use the new workspaces endpoint. For more information, see [the announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-teams-deprecation/).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameFollowingGetTest() {
        String username = null;
        PaginatedUsers response = api.teamsUsernameFollowingGet(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * Gets the public information associated with a team.  If the team&#x27;s profile is private, &#x60;location&#x60;, &#x60;website&#x60; and &#x60;created_on&#x60; elements are omitted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameGetTest() {
        String username = null;
        Team response = api.teamsUsernameGet(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a paginated list of webhooks installed on this team.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameHooksGetTest() {
        String username = null;
        PaginatedWebhookSubscriptions response = api.teamsUsernameHooksGet(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a new webhook on the specified team.  Team webhooks are fired for events from all repositories belonging to that team account.  Note that only admins can install webhooks on teams.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameHooksPostTest() {
        String username = null;
        WebhookSubscription response = api.teamsUsernameHooksPost(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes the specified webhook subscription from the given team account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameHooksUidDeleteTest() {
        String username = null;
        String uid = null;
        api.teamsUsernameHooksUidDelete(username, uid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns the webhook with the specified id installed on the given team account.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameHooksUidGetTest() {
        String username = null;
        String uid = null;
        WebhookSubscription response = api.teamsUsernameHooksUidGet(username, uid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates the specified webhook subscription.  The following properties can be mutated:  * &#x60;description&#x60; * &#x60;url&#x60; * &#x60;active&#x60; * &#x60;events&#x60;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameHooksUidPutTest() {
        String username = null;
        String uid = null;
        WebhookSubscription response = api.teamsUsernameHooksUidPut(username, uid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns all members of the specified team. Any member of any of the team&#x27;s groups is considered a member of the team. This includes users in groups that may not actually have access to any of the team&#x27;s repositories.  This operation has been deprecated due to privacy changes. See the [announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-changes-gdpr/) for details.  Use this [workspaces](https://developer.atlassian.com/bitbucket/api/2/reference/resource/workspaces/%7Bworkspace%7D/members) endpoint as a replacement.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsUsernameMembersGetTest() {
        String username = null;
        User response = api.teamsUsernameMembersGet(username);

        // TODO: test validations
    }
    /**
     * 
     *
     * All repositories in the given workspace. This includes any private repositories the calling user has access to.  The teams and users endpoints have been deprecated. Use the [/repositories/{workspace}](https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D)  endpoint in place of both of these endpoints. For more information, see the [deprecation announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-teams-deprecation/).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void teamsWorkspaceRepositoriesGetTest() {
        String workspace = null;
        Error response = api.teamsWorkspaceRepositoriesGet(workspace);

        // TODO: test validations
    }
    /**
     * 
     *
     * All repositories in the given workspace. This includes any private repositories the calling user has access to.  The teams and users endpoints have been deprecated. Use the [/repositories/{workspace}](https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Bworkspace%7D)  endpoint in place of both of these endpoints. For more information, see the [deprecation announcement](https://developer.atlassian.com/cloud/bitbucket/bitbucket-api-teams-deprecation/).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void usersWorkspaceRepositoriesGetTest() {
        String workspace = null;
        Error response = api.usersWorkspaceRepositoriesGet(workspace);

        // TODO: test validations
    }
}
