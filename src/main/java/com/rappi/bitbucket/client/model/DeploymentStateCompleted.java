/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rappi.bitbucket.client.model.Account;
import com.rappi.bitbucket.client.model.DeploymentState;
import com.rappi.bitbucket.client.model.DeploymentStateCompletedStatus;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * DeploymentStateCompleted
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-12T14:05:09.453-06:00[America/Mexico_City]")
public class DeploymentStateCompleted extends DeploymentState {
  /**
   * The name of deployment state (COMPLETED).
   */
  public enum NameEnum {
    COMPLETED("COMPLETED");

    private String value;

    NameEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static NameEnum fromValue(String text) {
      for (NameEnum b : NameEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("name")
  private NameEnum name = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("deployer")
  private Account deployer = null;

  @JsonProperty("status")
  private DeploymentStateCompletedStatus status = null;

  @JsonProperty("start_date")
  private OffsetDateTime startDate = null;

  @JsonProperty("completion_date")
  private OffsetDateTime completionDate = null;

  public DeploymentStateCompleted name(NameEnum name) {
    this.name = name;
    return this;
  }

   /**
   * The name of deployment state (COMPLETED).
   * @return name
  **/
  @Schema(description = "The name of deployment state (COMPLETED).")
  public NameEnum getName() {
    return name;
  }

  public void setName(NameEnum name) {
    this.name = name;
  }

  public DeploymentStateCompleted url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Link to the deployment result.
   * @return url
  **/
  @Schema(description = "Link to the deployment result.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public DeploymentStateCompleted deployer(Account deployer) {
    this.deployer = deployer;
    return this;
  }

   /**
   * Get deployer
   * @return deployer
  **/
  @Schema(description = "")
  public Account getDeployer() {
    return deployer;
  }

  public void setDeployer(Account deployer) {
    this.deployer = deployer;
  }

  public DeploymentStateCompleted status(DeploymentStateCompletedStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public DeploymentStateCompletedStatus getStatus() {
    return status;
  }

  public void setStatus(DeploymentStateCompletedStatus status) {
    this.status = status;
  }

  public DeploymentStateCompleted startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The timestamp when the deployment was started.
   * @return startDate
  **/
  @Schema(description = "The timestamp when the deployment was started.")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public DeploymentStateCompleted completionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
    return this;
  }

   /**
   * The timestamp when the deployment completed.
   * @return completionDate
  **/
  @Schema(description = "The timestamp when the deployment completed.")
  public OffsetDateTime getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(OffsetDateTime completionDate) {
    this.completionDate = completionDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentStateCompleted deploymentStateCompleted = (DeploymentStateCompleted) o;
    return Objects.equals(this.name, deploymentStateCompleted.name) &&
        Objects.equals(this.url, deploymentStateCompleted.url) &&
        Objects.equals(this.deployer, deploymentStateCompleted.deployer) &&
        Objects.equals(this.status, deploymentStateCompleted.status) &&
        Objects.equals(this.startDate, deploymentStateCompleted.startDate) &&
        Objects.equals(this.completionDate, deploymentStateCompleted.completionDate) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, url, deployer, status, startDate, completionDate, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentStateCompleted {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    deployer: ").append(toIndentedString(deployer)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
