/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rappi.bitbucket.client.model.SubjectTypesRepositoryEvents;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AccountLinks
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-12T14:05:09.453-06:00[America/Mexico_City]")
public class AccountLinks {
  @JsonProperty("self")
  private SubjectTypesRepositoryEvents self = null;

  @JsonProperty("html")
  private SubjectTypesRepositoryEvents html = null;

  @JsonProperty("avatar")
  private SubjectTypesRepositoryEvents avatar = null;

  @JsonProperty("followers")
  private SubjectTypesRepositoryEvents followers = null;

  @JsonProperty("following")
  private SubjectTypesRepositoryEvents following = null;

  @JsonProperty("repositories")
  private SubjectTypesRepositoryEvents repositories = null;

  public AccountLinks self(SubjectTypesRepositoryEvents self) {
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getSelf() {
    return self;
  }

  public void setSelf(SubjectTypesRepositoryEvents self) {
    this.self = self;
  }

  public AccountLinks html(SubjectTypesRepositoryEvents html) {
    this.html = html;
    return this;
  }

   /**
   * Get html
   * @return html
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getHtml() {
    return html;
  }

  public void setHtml(SubjectTypesRepositoryEvents html) {
    this.html = html;
  }

  public AccountLinks avatar(SubjectTypesRepositoryEvents avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getAvatar() {
    return avatar;
  }

  public void setAvatar(SubjectTypesRepositoryEvents avatar) {
    this.avatar = avatar;
  }

  public AccountLinks followers(SubjectTypesRepositoryEvents followers) {
    this.followers = followers;
    return this;
  }

   /**
   * Get followers
   * @return followers
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getFollowers() {
    return followers;
  }

  public void setFollowers(SubjectTypesRepositoryEvents followers) {
    this.followers = followers;
  }

  public AccountLinks following(SubjectTypesRepositoryEvents following) {
    this.following = following;
    return this;
  }

   /**
   * Get following
   * @return following
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getFollowing() {
    return following;
  }

  public void setFollowing(SubjectTypesRepositoryEvents following) {
    this.following = following;
  }

  public AccountLinks repositories(SubjectTypesRepositoryEvents repositories) {
    this.repositories = repositories;
    return this;
  }

   /**
   * Get repositories
   * @return repositories
  **/
  @Schema(description = "")
  public SubjectTypesRepositoryEvents getRepositories() {
    return repositories;
  }

  public void setRepositories(SubjectTypesRepositoryEvents repositories) {
    this.repositories = repositories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountLinks accountLinks = (AccountLinks) o;
    return Objects.equals(this.self, accountLinks.self) &&
        Objects.equals(this.html, accountLinks.html) &&
        Objects.equals(this.avatar, accountLinks.avatar) &&
        Objects.equals(this.followers, accountLinks.followers) &&
        Objects.equals(this.following, accountLinks.following) &&
        Objects.equals(this.repositories, accountLinks.repositories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(self, html, avatar, followers, following, repositories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountLinks {\n");
    
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    followers: ").append(toIndentedString(followers)).append("\n");
    sb.append("    following: ").append(toIndentedString(following)).append("\n");
    sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
