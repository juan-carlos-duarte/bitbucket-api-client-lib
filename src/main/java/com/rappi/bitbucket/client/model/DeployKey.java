/*
 * Bitbucket API
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@bitbucket.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rappi.bitbucket.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.rappi.bitbucket.client.model.Account;
import com.rappi.bitbucket.client.model.BranchingModelSettingsLinks;
import com.rappi.bitbucket.client.model.Repository;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * DeployKey
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-12T14:05:09.453-06:00[America/Mexico_City]")
public class DeployKey extends Object {
  @JsonProperty("key")
  private String key = null;

  @JsonProperty("repository")
  private Repository repository = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("label")
  private String label = null;

  @JsonProperty("added_on")
  private OffsetDateTime addedOn = null;

  @JsonProperty("last_used")
  private OffsetDateTime lastUsed = null;

  @JsonProperty("links")
  private BranchingModelSettingsLinks links = null;

  @JsonProperty("owner")
  private Account owner = null;

  public DeployKey key(String key) {
    this.key = key;
    return this;
  }

   /**
   * The deploy key value.
   * @return key
  **/
  @Schema(description = "The deploy key value.")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public DeployKey repository(Repository repository) {
    this.repository = repository;
    return this;
  }

   /**
   * Get repository
   * @return repository
  **/
  @Schema(description = "")
  public Repository getRepository() {
    return repository;
  }

  public void setRepository(Repository repository) {
    this.repository = repository;
  }

  public DeployKey comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * The comment parsed from the deploy key (if present)
   * @return comment
  **/
  @Schema(description = "The comment parsed from the deploy key (if present)")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public DeployKey label(String label) {
    this.label = label;
    return this;
  }

   /**
   * The user-defined label for the deploy key
   * @return label
  **/
  @Schema(description = "The user-defined label for the deploy key")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public DeployKey addedOn(OffsetDateTime addedOn) {
    this.addedOn = addedOn;
    return this;
  }

   /**
   * Get addedOn
   * @return addedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getAddedOn() {
    return addedOn;
  }

  public void setAddedOn(OffsetDateTime addedOn) {
    this.addedOn = addedOn;
  }

  public DeployKey lastUsed(OffsetDateTime lastUsed) {
    this.lastUsed = lastUsed;
    return this;
  }

   /**
   * Get lastUsed
   * @return lastUsed
  **/
  @Schema(description = "")
  public OffsetDateTime getLastUsed() {
    return lastUsed;
  }

  public void setLastUsed(OffsetDateTime lastUsed) {
    this.lastUsed = lastUsed;
  }

  public DeployKey links(BranchingModelSettingsLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public BranchingModelSettingsLinks getLinks() {
    return links;
  }

  public void setLinks(BranchingModelSettingsLinks links) {
    this.links = links;
  }

  public DeployKey owner(Account owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @Schema(description = "")
  public Account getOwner() {
    return owner;
  }

  public void setOwner(Account owner) {
    this.owner = owner;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeployKey deployKey = (DeployKey) o;
    return Objects.equals(this.key, deployKey.key) &&
        Objects.equals(this.repository, deployKey.repository) &&
        Objects.equals(this.comment, deployKey.comment) &&
        Objects.equals(this.label, deployKey.label) &&
        Objects.equals(this.addedOn, deployKey.addedOn) &&
        Objects.equals(this.lastUsed, deployKey.lastUsed) &&
        Objects.equals(this.links, deployKey.links) &&
        Objects.equals(this.owner, deployKey.owner) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, repository, comment, label, addedOn, lastUsed, links, owner, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeployKey {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    repository: ").append(toIndentedString(repository)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    addedOn: ").append(toIndentedString(addedOn)).append("\n");
    sb.append("    lastUsed: ").append(toIndentedString(lastUsed)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
